{"version":3,"file":"static/js/714.99801636.chunk.js","mappings":"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","sources":["services/moviesAPI.js","views/MovieDetailsView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '82d55dcaf5b3d3d74d5dfbfe8a424451';\r\n\r\nasync function fetchWithErrorHandling(url = '') {\r\n    const response = await fetch(url);\r\n    return response.ok\r\n        ? await response.json()\r\n        : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nfunction fetchMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\r\n}\r\n\r\nfunction fetchMovie(query) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}&language=en-US&page=1&include_adult=false`)\r\n}\r\n\r\nfunction fetchMovieDetail(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchCast(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchReviews(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`)\r\n}\r\n\r\nconst fetches = { fetchMovies, fetchMovie, fetchMovieDetail, fetchCast, fetchReviews }\r\n\r\nexport default fetches","import { useState, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport fetches from '../services/moviesAPI';\r\nimport { lazy, Suspense } from 'react';\r\nconst Cast = lazy(() => import('../components/Cast/Cast'));\r\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\r\n\r\nexport default function MoviesDetailsView() {\r\n    const match = useRouteMatch();\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        fetches.fetchMovieDetail(movieId).then(res => setMovie(res));\r\n\r\n    }, [movieId])\r\n\r\n\r\n    return (\r\n        <div style={{ paddingTop: '1px', paddingBottom: '30px', backgroundColor: 'rgb(188, 236, 236)' }}>\r\n            {movie && <>\r\n                <div>\r\n                    <Link to=\"/\" style={{\r\n                        display: 'block',\r\n                        width: '100px',\r\n                        margin: '20px',\r\n                        padding: '10px',\r\n                        backgroundColor: 'rgb(5, 153, 238)',\r\n                        border: '1px solid black',\r\n                        borderRadius: '5px',\r\n                        textAlign: 'center',\r\n                        alignItems: 'center',\r\n                        color: 'white',\r\n                        textDecoration: 'none'\r\n                    }}>\r\n                        Go back</Link>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} style={{ marginLeft: '20px', marginRight: '20px' }} alt='' />\r\n                        <div style={{ margin: '20px' }}>\r\n                            <h2>{movie.title}</h2>\r\n                            <p>User score: {movie.vote_average}</p>\r\n                            <h3>Overview</h3>\r\n                            <p>{movie.overview}</p>\r\n                            <h4>Genres:</h4>\r\n                            <ul>\r\n                                {movie?.genres?.length && movie.genres.map(genre => (\r\n                                    <li key={genre.id}>{genre.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{\r\n                    margin: '20px',\r\n                    borderBottom: '1px solid grey',\r\n                    borderTop: '1px solid grey',\r\n                    boxShadow: '0px 0px 4px blue',\r\n                    backgroundColor: 'white'\r\n                }}>\r\n                    <h2 style={{\r\n                        marginLeft: '20px'\r\n                    }}>Additional information</h2>\r\n                    <div>\r\n                        <Link to={{ pathname: `${match.url}/cast`, state: movieId }} style={{ display: 'block', margin: '20px' }}>Cast</Link>\r\n                        <Link to={{ pathname: `${match.url}/reviews`, state: movieId }} style={{ display: 'block', margin: '20px' }}>Reviews</Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n\r\n            <Suspense fallback={<h1>Loading...</h1>}>\r\n                <Route path={match.url + '/cast'}>\r\n                    <Cast />\r\n                </Route>\r\n\r\n                <Route path={match.url + '/reviews'}>\r\n                    <Reviews />\r\n                </Route>\r\n            </Suspense >\r\n        </div>\r\n    )\r\n}"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetches","fetchMovies","fetchMovie","query","fetchMovieDetail","movie_id","fetchCast","fetchReviews","Cast","lazy","Reviews","MoviesDetailsView","match","useRouteMatch","movieId","useParams","useState","movie","setMovie","useEffect","then","res","style","paddingTop","paddingBottom","backgroundColor","to","display","width","margin","padding","border","borderRadius","textAlign","alignItems","color","textDecoration","src","poster_path","marginLeft","marginRight","alt","title","vote_average","overview","genres","length","map","genre","name","id","borderBottom","borderTop","boxShadow","pathname","state","Suspense","fallback","path"],"sourceRoot":""}