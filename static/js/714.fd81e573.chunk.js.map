{"version":3,"file":"static/js/714.fd81e573.chunk.js","mappings":"+KAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SAC2BC,MAAMD,GADjC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GA2BA,IAAMC,EAAU,CAAEC,YApBlB,WACI,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,qCAAyCC,KAmB3CY,WAhB/B,SAAoBC,GAChB,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,+BAAmCc,EAAnC,oBAAoDb,EAApD,gDAeUc,iBAZ3C,SAA0BC,GACtB,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,oBAA0Cf,EAA1C,qBAW4BgB,UAR7D,SAAmBD,GACf,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,4BAAkDf,EAAlD,qBAOuCiB,aAJxE,SAAsBF,GAClB,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,4BAAkDf,EAAlD,6BAKjC,O,2HC1Be,SAASkB,IACpB,IAAMC,GAAQC,EAAAA,EAAAA,MACNC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACNhB,EAAAA,EAAAA,iBAAyBW,GAASM,MAAK,SAAAC,GAAG,OAAIH,EAAUG,QACzD,CAACP,EAASG,KAIT,gCACKA,IAAU,iCACP,4BACI,SAAC,KAAD,CAAMK,GAAG,IAAIC,MAAO,CAChBC,QAAS,QACTC,MAAO,QACPC,OAAQ,OACRC,QAAS,OACTC,gBAAiB,mBACjBC,OAAQ,kBACRC,aAAc,MACdC,UAAW,SACXC,WAAY,SACZC,MAAO,QACPC,eAAgB,QAXpB,sBAcA,iBAAKX,MAAO,CAAEC,QAAS,QAAvB,WACI,gBAAKW,IAAG,yCAAoClB,EAAOmB,aAAeb,MAAO,CAAEc,WAAY,OAAQC,YAAa,QAAUC,IAAI,MAC1H,iBAAKhB,MAAO,CAAEG,OAAQ,QAAtB,WACI,wBAAKT,EAAOuB,SACZ,wCAAgBvB,EAAOwB,iBACvB,sCACA,uBAAIxB,EAAOyB,YACX,qCACA,wBACKzB,EAAO0B,QAAU1B,EAAO0B,OAAOC,KAAI,SAAAC,GAAK,OACrC,wBAAoBA,EAAMC,MAAjBD,EAAME,mBAMnC,iBAAKxB,MAAO,CACRG,OAAQ,OACRsB,aAAc,iBACdC,UAAW,iBACXC,UAAW,oBAJf,WAMI,eAAI3B,MAAO,CACPc,WAAY,QADhB,qCAGA,4BACI,SAAC,KAAD,CAAMf,GAAIV,EAAMjB,IAAM,QAAS4B,MAAO,CAAEC,QAAS,QAASE,OAAQ,QAAlE,mBACA,SAAC,KAAD,CAAMJ,GAAIV,EAAMjB,IAAM,WAAY4B,MAAO,CAAEC,QAAS,QAASE,OAAQ,QAArE,+BAMZ,SAAC,KAAD,CAAOyB,KAAMvC,EAAMjB,IAAM,WAIzB,SAAC,KAAD,CAAOwD,KAAMvC,EAAMjB,IAAM","sources":["services/moviesAPI.js","views/MovieDetailsView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '82d55dcaf5b3d3d74d5dfbfe8a424451';\r\n\r\nasync function fetchWithErrorHandling(url = '') {\r\n    const response = await fetch(url);\r\n    return response.ok\r\n        ? await response.json()\r\n        : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nfunction fetchMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\r\n}\r\n\r\nfunction fetchMovie(query) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}&language=en-US&page=1&include_adult=false`)\r\n}\r\n\r\nfunction fetchMovieDetail(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchCast(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchReviews(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`)\r\n}\r\n\r\nconst fetches = { fetchMovies, fetchMovie, fetchMovieDetail, fetchCast, fetchReviews }\r\n\r\nexport default fetches","import { useState, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport fetches from '../services/moviesAPI';\r\n// import Cast from '../components/Cast/Cast';\r\n// import Reviews from '../components/Reviews/Reviews';\r\n\r\nexport default function MoviesDetailsView() {\r\n    const match = useRouteMatch();\r\n    const { movieId } = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetches.fetchMovieDetail(movieId).then(res => setMovies(res));\r\n    }, [movieId, movies])\r\n\r\n\r\n    return (\r\n        <>\r\n            {movies && <>\r\n                <div>\r\n                    <Link to=\"/\" style={{\r\n                        display: 'block',\r\n                        width: '100px',\r\n                        margin: '20px',\r\n                        padding: '10px',\r\n                        backgroundColor: 'rgb(5, 153, 238)',\r\n                        border: '1px solid black',\r\n                        borderRadius: '5px',\r\n                        textAlign: 'center',\r\n                        alignItems: 'center',\r\n                        color: 'white',\r\n                        textDecoration: 'none'\r\n                    }}>\r\n                        Go back</Link>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <img src={`https://image.tmdb.org/t/p/w300${movies.poster_path}`} style={{ marginLeft: '20px', marginRight: '20px' }} alt='' />\r\n                        <div style={{ margin: '20px' }}>\r\n                            <h2>{movies.title}</h2>\r\n                            <p>User score: {movies.vote_average}</p>\r\n                            <h3>Overview</h3>\r\n                            <p>{movies.overview}</p>\r\n                            <h4>Genres:</h4>\r\n                            <ul>\r\n                                {movies.genres && movies.genres.map(genre => (\r\n                                    <li key={genre.id}>{genre.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{\r\n                    margin: '20px',\r\n                    borderBottom: '1px solid grey',\r\n                    borderTop: '1px solid grey',\r\n                    boxShadow: '0px 0px 4px blue'\r\n                }}>\r\n                    <h2 style={{\r\n                        marginLeft: '20px'\r\n                    }}>Additional information</h2>\r\n                    <div>\r\n                        <Link to={match.url + '/cast'} style={{ display: 'block', margin: '20px' }}>Cast</Link>\r\n                        <Link to={match.url + '/reviews'} style={{ display: 'block', margin: '20px' }}>Reviews</Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n\r\n            <Route path={match.url + '/cast'}>\r\n                {/* <Cast /> */}\r\n            </Route>\r\n\r\n            <Route path={match.url + '/reviews'}>\r\n                {/* <Reviews /> */}\r\n            </Route>\r\n        </>\r\n    )\r\n}"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetches","fetchMovies","fetchMovie","query","fetchMovieDetail","movie_id","fetchCast","fetchReviews","MoviesDetailsView","match","useRouteMatch","movieId","useParams","useState","movies","setMovies","useEffect","then","res","to","style","display","width","margin","padding","backgroundColor","border","borderRadius","textAlign","alignItems","color","textDecoration","src","poster_path","marginLeft","marginRight","alt","title","vote_average","overview","genres","map","genre","name","id","borderBottom","borderTop","boxShadow","path"],"sourceRoot":""}