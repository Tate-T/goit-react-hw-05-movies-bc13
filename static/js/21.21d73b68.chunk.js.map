{"version":3,"file":"static/js/21.21d73b68.chunk.js","mappings":"+KACA,S,2BCyBA,EAtBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWC,EAAAA,WAAf,SACKJ,EAAOK,KAAI,SAAAC,GAAK,OAChB,yBACG,SAAC,KAAD,CACIC,GAAI,CACAC,SAAU,WAAaF,EAAMG,GAC7BC,MAAO,CAAEC,KAAMV,IAChBW,YAAa,CAAEC,MAAO,oBAJ7B,SAIoDP,EAAMQ,OAASR,EAAMS,QALnET,EAAMG,W,mDCVtBO,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SAC2BC,MAAMD,GADjC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GA2BA,IAAMC,EAAU,CAAEC,YApBlB,WACI,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,qCAAyCC,KAmB3CY,WAhB/B,SAAoBC,GAChB,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,+BAAmCc,EAAnC,oBAAoDb,EAApD,gDAeUc,iBAZ3C,SAA0BC,GACtB,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,oBAA0Cf,EAA1C,qBAW4BgB,UAR7D,SAAmBD,GACf,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,4BAAkDf,EAAlD,qBAOuCiB,aAJxE,SAAsBF,GAClB,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,4BAAkDf,EAAlD,6BAKjC,O,+FC/BA,GAAgB,KAAO,mBAAmB,MAAQ,qB,SC2BlD,EAzBa,SAAC,GAAkB,IAAhBkB,EAAe,EAAfA,SAEZ,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAON,EAAP,KAAcO,EAAd,KAaA,OACI,kBAAMC,OAAO,GAAGnC,UAAWC,EAAAA,KAAQ+B,SAPtB,SAACI,GACdA,EAAEC,iBACFL,EAASL,GACTO,EAAS,KAIT,WACI,kBAAOI,QAAQ,GAAGtC,UAAWC,EAAAA,MAASsC,SAbpB,SAACH,GACvB,IAAQI,EAAUJ,EAAEK,cAAZD,MACRN,EAASM,IAWL,UACI,kBAAOE,KAAK,OAAO9B,KAAMe,EAAO3B,UAAWC,EAAAA,WAE/C,2C,SCjBG,SAAS0C,IAEpB,OAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOpC,EAAP,KAAe+C,EAAf,KACA,GAA0BX,EAAAA,EAAAA,UAAS,IAAnC,eAAON,EAAP,KAAcO,EAAd,KAMA,OAJAW,EAAAA,EAAAA,YAAU,WACNlB,GAASH,EAAAA,EAAAA,WAAmBG,GAAOmB,MAAK,SAAAC,GAAG,OAAIH,EAAUG,EAAIC,cAC9D,CAACrB,KAGA,iCACI,SAAC,EAAD,CAAMK,SAAUE,IACfP,IAAS,SAACsB,EAAA,EAAD,CAAYpD,OAAQA","sources":["components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","services/moviesAPI.js","webpack://goit-react-hw-05-movies-bc13/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","views/MoviesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import s from './MoviesList.module.css';\r\nimport { useLocation, NavLink } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst MoviesList = ({ movies }) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <ul className={s.moviesList} >\r\n            {movies.map(movie =>\r\n            (<li key={movie.id}>\r\n                <NavLink\r\n                    to={{\r\n                        pathname: '/movies/' + movie.id,\r\n                        state: { from: location },\r\n                    }} activeStyle={{ color: \"rgb(5, 153, 238)\" }}>{movie.title || movie.name}</NavLink>\r\n            </li>)\r\n            )}\r\n        </ul >\r\n    )\r\n}\r\n\r\n// MoviesList.propTypes = {\r\n//     movies: PropTypes.func\r\n// }\r\n\r\nexport default MoviesList","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '82d55dcaf5b3d3d74d5dfbfe8a424451';\r\n\r\nasync function fetchWithErrorHandling(url = '') {\r\n    const response = await fetch(url);\r\n    return response.ok\r\n        ? await response.json()\r\n        : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nfunction fetchMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\r\n}\r\n\r\nfunction fetchMovie(query) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}&language=en-US&page=1&include_adult=false`)\r\n}\r\n\r\nfunction fetchMovieDetail(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchCast(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`)\r\n}\r\n\r\nfunction fetchReviews(movie_id) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`)\r\n}\r\n\r\nconst fetches = { fetchMovies, fetchMovie, fetchMovieDetail, fetchCast, fetchReviews }\r\n\r\nexport default fetches","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__hx2Oz\",\"input\":\"Form_input__MSQqT\"};","import { useState } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setQuery(value)\r\n    }\r\n\r\n    const OnSubmit = (e) => {\r\n        e.preventDefault()\r\n        onSubmit(query)\r\n        setQuery('')\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" className={s.form} onSubmit={OnSubmit}>\r\n            <label htmlFor=\"\" className={s.label} onChange={handleInputChange}>\r\n                <input type=\"text\" name={query} className={s.input} />\r\n            </label>\r\n            <button>Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import { useState, useEffect } from 'react';\r\n// import { Link, useRouteMatch } from 'react-router-dom';\r\nimport fetches from '../services/moviesAPI';\r\nimport Form from '../components/Form/Form';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\nexport default function MoviesView() {\r\n    // const url = useRouteMatch();\r\n    const [movies, setMovies] = useState([]);\r\n    const [query, setQuery] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        query && fetches.fetchMovie(query).then(res => setMovies(res.results));\r\n    }, [query])\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={setQuery} />\r\n            {query && <MoviesList movies={movies} />}\r\n        </>\r\n    )\r\n}"],"names":["movies","location","useLocation","className","s","map","movie","to","pathname","id","state","from","activeStyle","color","title","name","BASE_URL","KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetches","fetchMovies","fetchMovie","query","fetchMovieDetail","movie_id","fetchCast","fetchReviews","onSubmit","useState","setQuery","action","e","preventDefault","htmlFor","onChange","value","currentTarget","type","MoviesView","setMovies","useEffect","then","res","results","MoviesList"],"sourceRoot":""}